{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\verizon\\\\Desktop\\\\Final Services\\\\AdminUI_final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nconst initialState = {\n  list: [{}],\n  isOfferLoaded: false\n};\nexport function eventHandlerOffer(event) {\n  let name = event.target.name;\n  let value = event.target.value;\n  console.log(name + \" :\" + value);\n  restStore.dispatch(dataHandler(_objectSpread({}, restStore.getState().newOffer, {\n    [name]: value\n  })));\n}\nexport function addOffersBythunk() {\n  return function (dispatch) {\n    console.log(\"addbythunk\" + restStore.getState().newOffer);\n    return axios.post(\"http://localhost:8099/addOffers\", restStore.getState().newOffer, {\n      headers: {\n        'Accept': 'application/json'\n      }\n    }).then(resp => dispatch(responseFromServer(resp.data)));\n  };\n}\n\nconst dataHandler = newOffer => {\n  console.log(\" before axios  \" + restStore.getState().newOffer);\n  return {\n    type: 'DATA_INPUT_CHANGE',\n    newOffer\n  };\n};\n\nconst responseFromServer = response => {\n  return {\n    type: 'SERVER_RESPONSE',\n    statusCode: response\n  };\n}; // export const DriverRegisterReducer=(state=initialState,action)=>{\n//     switch(action.type){\n//         case 'SERVER_RESPONSE':\n//             return Object.assign({},action);\n//         case 'DATA_INPUT_CHANGE':\n//             return Object.assign({},action);\n//         default:\n//             return state\n//     }\n// }\n\n\nexport const getOffersAction = (list, status) => {\n  return {\n    type: 'GET_ALL_OFFERS',\n    payload: list,\n    isOfferLoaded: status\n  };\n};\nexport const deleteOfferAction = id => {\n  return {\n    type: 'DELETE_OFFER',\n    id: id\n  };\n};\nexport function getOfferByThunk() {\n  console.log(\"get list by thunk\");\n  return function (dispatch) {\n    console.log(restStore.getState());\n    return axios.get(\"http://localhost:8099/viewOffers\").then(resp => {\n      dispatch(getOffersAction(resp.data, true));\n    });\n  };\n}\nexport function deleteByThunk() {\n  console.log('delete');\n  return axios.delete(\"http://localhost:8081/deleteOffer/\" + restStore.getState().id);\n}\nexport function deleteById(id) {\n  restStore.dispatch(deleteOfferAction(id));\n  deleteByThunk();\n}\nexport const offerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_ALL_OFFERS':\n      return Object.assign({}, action);\n\n    case 'DELETE_OFFER':\n      return Object.assign({}, action);\n\n    case 'SERVER_RESPONSE':\n      return Object.assign({}, action);\n\n    case 'DATA_INPUT_CHANGE':\n      return Object.assign({}, action);\n\n    default:\n      return state;\n  }\n};\nlet restStore = createStore(offerReducer, applyMiddleware(thunk));\nexport default restStore;","map":{"version":3,"sources":["C:\\Users\\verizon\\Desktop\\Final Services\\AdminUI_final\\src\\OffersReducer.js"],"names":["axios","applyMiddleware","createStore","thunk","initialState","list","isOfferLoaded","eventHandlerOffer","event","name","target","value","console","log","restStore","dispatch","dataHandler","getState","newOffer","addOffersBythunk","post","headers","then","resp","responseFromServer","data","type","response","statusCode","getOffersAction","status","payload","deleteOfferAction","id","getOfferByThunk","get","deleteByThunk","delete","deleteById","offerReducer","state","action","Object","assign"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst initialState={\n    list:[{}],\n    isOfferLoaded:false,\n    \n}\n\n\nexport function eventHandlerOffer(event){\n        \n        let name = event.target.name;\n        let value = event.target.value;\n    console.log(name+\" :\"+value)\n        \n        restStore.dispatch(dataHandler(\n            {...restStore.getState().newOffer,[name]:value}));\n}\n\nexport function addOffersBythunk(){\n\n    return function(dispatch){\n            console.log(\"addbythunk\" + restStore.getState().newOffer)\n        return axios.post(\"http://localhost:8099/addOffers\",restStore.getState().newOffer,{headers: {'Accept': 'application/json'}})\n                    .then(resp=>dispatch(responseFromServer(resp.data)));\n\n    }\n\n}\n\n\nconst dataHandler=(newOffer)=>{\n\n    console.log(\" before axios  \"  + restStore.getState().newOffer);\n    return{\n        type:'DATA_INPUT_CHANGE',\n        newOffer\n\n    }\n\n}\n\nconst responseFromServer=(response)=>{\n\n    return{\n        type:'SERVER_RESPONSE',\n        statusCode:response\n    }\n}\n\n\n// export const DriverRegisterReducer=(state=initialState,action)=>{\n//     switch(action.type){\n//         case 'SERVER_RESPONSE':\n//             return Object.assign({},action);\n//         case 'DATA_INPUT_CHANGE':\n//             return Object.assign({},action);\n//         default:\n//             return state\n//     }\n// }\n\n\n\nexport const getOffersAction=(list,status)=>{\n\n    return{\n        type:'GET_ALL_OFFERS',\n        payload: list,\n        isOfferLoaded:status\n    }\n\n    \n}\n\nexport const deleteOfferAction=(id)=>{\n    return{\n        type:'DELETE_OFFER',\n        id:id,\n    }\n}\n\nexport function getOfferByThunk(){\n\n    console.log(\"get list by thunk\")\n    return function(dispatch){\n        console.log(restStore.getState())\n        return axios.get(\"http://localhost:8099/viewOffers\").then(resp=>{\n        \n        dispatch(getOffersAction(resp.data,true))\n            \n    \n    });\n\n    }\n}\n\nexport function deleteByThunk(){\n    console.log('delete');\n\n    return axios.delete(\"http://localhost:8081/deleteOffer/\"+restStore.getState().id)\n    \n}\n\nexport function deleteById(id){\n\n    restStore.dispatch(deleteOfferAction(id));\n    deleteByThunk();\n}\n\n\nexport const offerReducer=(state=initialState,action)=>{\n    switch(action.type){\n        case 'GET_ALL_OFFERS':    \n            return Object.assign({},action);\n        case 'DELETE_OFFER':\n            return Object.assign({},action);\n        case 'SERVER_RESPONSE':\n            return Object.assign({},action);\n        case 'DATA_INPUT_CHANGE':\n                \n            return Object.assign({},action);\n        default:\n            return state\n    }\n}\n\nlet restStore= createStore(offerReducer,applyMiddleware(thunk));\n\nexport default restStore;"]},"metadata":{},"sourceType":"module"}