{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\verizon\\\\Desktop\\\\Final Services\\\\AdminUI_final\\\\src\\\\ShowDrivers\\\\ShowDrivers.react.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { UncontrolledCollapse, Button, CardBody, Card } from 'reactstrap';\nimport './ShowDrivers.css';\nimport { getListByThunk, deleteById, deleteDriverById } from '../Reducer';\n\nclass ShowDrivers extends React.Component {\n  componentWillMount() {\n    this.props.get();\n  }\n\n  render() {\n    if (!this.props.isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Loading..\"));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.props.list.map((eachDriver, index) => {\n        return React.createElement(\"div\", {\n          className: \"card cardStyle shadow p-3 mb-5\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          className: \"DateInfoStyle col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"   \", eachDriver.name, \" \"), React.createElement(Button, {\n          color: \"default\",\n          id: \"toggler\" + index,\n          style: {\n            marginBottom: '1rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \" ViewDetails \"), React.createElement(\"div\", {\n          className: \"PlaceRight col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"fa fa-trash fa-lg trashStyle\",\n          onClick: () => this.props.delete(eachDriver.driverId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        })))), React.createElement(UncontrolledCollapse, {\n          toggler: \"toggler\" + index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: \"cardStyle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(CardBody, {\n          className: \"cardBodyStyle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"PlaceLeft col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-user \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }), React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"  \", eachDriver.name)), React.createElement(\"div\", {\n          className: \"PlaceRight col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-star\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), \"  \", eachDriver.rating)), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"PlaceLeft col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-calendar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }), \"  \", eachDriver.dob)), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"PlaceLeft col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-envelope\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }), \"  \", eachDriver.email)), React.createElement(\"div\", {\n          className: \"row \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"PlaceLeft col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-phone\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), \"  \", eachDriver.phoneNumber)), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"LicenseInfoStyle col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"License No :  \", eachDriver.licenseNumber))))));\n      }));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state.isLoaded + \"==============================================\");\n  return {\n    list: state.payload,\n    isLoaded: state.isLoaded\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    get: () => {\n      dispatch(getListByThunk());\n    },\n    delete: id => {\n      console.log(\"delelte  props \" + id);\n      deleteDriverById(id);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowDrivers);","map":{"version":3,"sources":["C:\\Users\\verizon\\Desktop\\Final Services\\AdminUI_final\\src\\ShowDrivers\\ShowDrivers.react.js"],"names":["React","connect","UncontrolledCollapse","Button","CardBody","Card","getListByThunk","deleteById","deleteDriverById","ShowDrivers","Component","componentWillMount","props","get","render","isLoaded","list","map","eachDriver","index","name","marginBottom","delete","driverId","rating","dob","email","phoneNumber","licenseNumber","mapStateToProps","state","console","log","payload","mapDispatchToProps","dispatch","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { UncontrolledCollapse, Button, CardBody, Card } from 'reactstrap';\nimport './ShowDrivers.css';\nimport { getListByThunk, deleteById, deleteDriverById } from '../Reducer';\n\n\n\n\n\nclass ShowDrivers extends React.Component {\n    \n    componentWillMount(){\n        this.props.get()\n    }\n\n    render(){\n    if(!this.props.isLoaded){\n        return(\n            <div>  \n                <h2>Loading..</h2>\n               \n               \n            </div>\n        )\n    } else{\n\n        return(\n            <div className=\"back\">\n                    \n        {  \n                        this.props.list.map( (eachDriver, index) => {\n                            return <div className=\"card cardStyle shadow p-3 mb-5\" key={index}>\n                        {/* <div class=\"card-header\"> </div> */}\n                        <div className=\"card-body\" >\n                                <div className=\"row\">\n                                    <h6 className=\"DateInfoStyle col\" >   {eachDriver.name} </h6>\n                                    {/* <h6 className=\"DateInfoStyle\"> {eachDriver.name}</h6> */}\n                                   \n                                    <Button color=\"default\" id={\"toggler\"+index}   style={{ marginBottom: '1rem' }}> ViewDetails </Button>\n                                        \n                                        \n                                    {/* <button onClick={()=>props.delete(eachDriver.id)}>Delete</button> */}\n                                    <div className=\"PlaceRight col\"><button className=\"fa fa-trash fa-lg trashStyle\" onClick={()=>this.props.delete(eachDriver.driverId)}></button></div>\n                                </div>\n\n                                {/* <div id=\"display\" className=\"collapse\">\n                                    helllooo\n                                </div> */}\n                        </div>\n                        <UncontrolledCollapse toggler={\"toggler\"+index} >\n                        \n                                <Card className=\"cardStyle\" >\n                                    <CardBody className=\"cardBodyStyle\" >\n                                        <div className=\"row\" >\n                                            <div className=\"PlaceLeft col\" ><i className=\"fa fa-user \" ></i><b>  {eachDriver.name}</b></div>\n                                            <div className=\"PlaceRight col\"><i className=\"fa fa-star\" ></i>  {eachDriver.rating}</div>\n                                            \n                                        </div>\n\n                                        \n                                        <div className=\"row\" >\n                                            <div className=\"PlaceLeft col\"><i className=\"fa fa-calendar\" ></i>  {eachDriver.dob}</div>\n                                        </div>\n\n                                        <div className=\"row\" >\n                                            <div className=\"PlaceLeft col\"><i className=\"fa fa-envelope\" ></i>  {eachDriver.email}</div>\n                                        </div>\n\n                                        <div className=\"row \" >\n                                            <div className=\"PlaceLeft col\"><i className=\"fa fa-phone\" key={index}></i>  {eachDriver.phoneNumber}</div>\n                                        </div>\n\n                                        \n                                            <br/>\n                                        <div className=\"row\">\n                                            <div className=\"LicenseInfoStyle col\">License No :  {eachDriver.licenseNumber}</div>\n                                            {/* <div className=\"PlaceRight col\"><button className=\"fa fa-trash fa-lg trashStyle\" onClick={console.log(\"Delete Clicked\")}></button></div> */}\n                                        </div>\n                                    </CardBody>\n                                </Card>\n                         </UncontrolledCollapse>\n                        </div>\n                        })}\n                        </div>\n                       \n        \n        )}\n\n}\n}\n                            \n\nconst mapStateToProps = (state) => {\n    console.log(state.isLoaded+\"==============================================\")\n    \n    return {\n        list: state.payload,\n        isLoaded: state.isLoaded\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        get: () => {\n            dispatch(getListByThunk())\n        },\n\n        delete: (id) => {\n            console.log(\"delelte  props \"+id)\n            deleteDriverById(id)\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowDrivers);"]},"metadata":{},"sourceType":"module"}