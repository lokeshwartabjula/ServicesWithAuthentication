{"ast":null,"code":"import axios from 'axios';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nconst initialState = {\n  isLoaded: false,\n  list: [{}]\n};\nexport const getDriverAction = (list, status) => {\n  console.log(\"in get action\" + status + \" ** before GET_ALL_DRIVERS\");\n  return {\n    type: 'GET_ALL_DRIVERS',\n    payload: list,\n    isLoaded: status\n  };\n};\nexport const deleteDriverAction = id => {\n  return {\n    type: 'DELETE_DRIVER',\n    id: id\n  };\n};\nexport function getListByThunk() {\n  console.log(\"get list by thunk\");\n  return function (dispatch) {\n    console.log(restStore.getState());\n    return axios.get(\"http://localhost:8080/viewDrivers\").then(resp => dispatch(getDriverAction(resp.data, true)));\n  };\n}\nexport function getOfferByThunk() {\n  console.log(\"get offer by thunk\");\n  return function (dispatch) {\n    console.log(restStore.getState());\n    return axios.get(\"http://localhost:8099/viewOffers\").then(resp => {\n      dispatch(getOffersAction(resp.data, true));\n    });\n  };\n}\nexport const getOffersAction = (list, status) => {\n  return {\n    type: 'GET_ALL_OFFERS',\n    payload: list,\n    isOfferLoaded: status\n  };\n};\nexport function deleteDriverByThunk(id) {\n  console.log(id);\n  return axios.delete(\"http://localhost:8080/deleteDriver/\" + id);\n}\nexport function deleteDriverById(id) {\n  deleteDriverByThunk(id);\n}\nexport function deleteOfferByThunk(id) {\n  console.log(id);\n  return axios.delete(\"http://localhost:8099/deleteOffer/\" + id);\n}\nexport function deleteOfferById(id) {\n  deleteOfferByThunk(id);\n} // const responseFromServer=(response)=>{\n//     return{\n//         type:'SERVER_RESPONSE',\n//         statusCode:response\n//     }\n// }\n\nexport const driverReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_ALL_DRIVERS':\n      return Object.assign({}, action);\n\n    case 'DELETE_DRIVER':\n      return Object.assign({}, action);\n\n    case 'GET_ALL_OFFERS':\n      return Object.assign({}, action);\n    // case 'SERVER_RESPONSE':\n    //     return Object.assign({},action);\n    // case 'DATA_INPUT_CHANGE':\n    //     return Object.assign({},action);\n\n    default:\n      return state;\n  }\n};\nlet restStore = createStore(driverReducer, applyMiddleware(thunk));\nexport default restStore;","map":{"version":3,"sources":["C:\\Users\\verizon\\Desktop\\Final Services\\AdminUI_final\\src\\Reducer.js"],"names":["axios","applyMiddleware","createStore","thunk","initialState","isLoaded","list","getDriverAction","status","console","log","type","payload","deleteDriverAction","id","getListByThunk","dispatch","restStore","getState","get","then","resp","data","getOfferByThunk","getOffersAction","isOfferLoaded","deleteDriverByThunk","delete","deleteDriverById","deleteOfferByThunk","deleteOfferById","driverReducer","state","action","Object","assign"],"mappings":"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","sourcesContent":[" import axios from 'axios';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst initialState={\n    isLoaded:false,\n    list:[{}]\n}\n\n\n\nexport const getDriverAction=(list,status)=>{\n    console.log(\"in get action\" +status +\" ** before GET_ALL_DRIVERS\")\n    return{\n        type:'GET_ALL_DRIVERS',\n        payload: list,\n        isLoaded:status\n    }\n\n    \n}\n\nexport const deleteDriverAction=(id)=>{\n    return{\n        type:'DELETE_DRIVER',\n        id:id,\n    }\n}\n\nexport function getListByThunk(){\n\n    console.log(\"get list by thunk\")\n    return function(dispatch){\n        console.log(restStore.getState())\n        return axios.get(\"http://localhost:8080/viewDrivers\")\n        .then(resp=>dispatch(getDriverAction(resp.data,true)));\n\n    }\n      \n}\n\nexport function getOfferByThunk(){\n\n    console.log(\"get offer by thunk\")\n    return function(dispatch){\n        console.log(restStore.getState())\n        return axios.get(\"http://localhost:8099/viewOffers\").then(resp=>{\n        \n        dispatch(getOffersAction(resp.data,true))\n            \n    \n    });\n\n    }\n}\n\n\nexport const getOffersAction=(list,status)=>{\n\n    return{\n        type:'GET_ALL_OFFERS',\n        payload: list,\n        isOfferLoaded:status\n    }\n\n    \n}\n\n\nexport function deleteDriverByThunk(id){\n   \nconsole.log(id);\n    return axios.delete(\"http://localhost:8080/deleteDriver/\"+id)\n    \n}\n\nexport function deleteDriverById(id){\n\n   \n    deleteDriverByThunk(id);\n}\n\nexport function deleteOfferByThunk(id){\n   \n    console.log(id);\n        return axios.delete(\"http://localhost:8099/deleteOffer/\"+id)\n        \n    }\n    \n    export function deleteOfferById(id){\n    \n       \n        deleteOfferByThunk(id);\n    }\n\n// const responseFromServer=(response)=>{\n\n//     return{\n//         type:'SERVER_RESPONSE',\n//         statusCode:response\n//     }\n// }\n\nexport const driverReducer=(state=initialState,action)=>{\n    \n    switch(action.type){\n        case 'GET_ALL_DRIVERS':\n            return Object.assign({},action);\n        case 'DELETE_DRIVER':\n            return Object.assign({},action);\n            case 'GET_ALL_OFFERS':\n            return Object.assign({},action);\n        // case 'SERVER_RESPONSE':\n        //     return Object.assign({},action);\n        // case 'DATA_INPUT_CHANGE':\n        //     return Object.assign({},action);\n        default:\n            return state\n    }\n}\n\nlet restStore= createStore(driverReducer,applyMiddleware(thunk));\n\nexport default restStore;"]},"metadata":{},"sourceType":"module"}